---
title: "Ch1_Script"
author: "E.King"
format: docx
editor: visual
---

## PCA & Diversity Analysis

```{r}
#| echo: false
#1 - Set up & load packages
getwd()
library(ggplot2)
library(dplyr)
library(vegan)
library(stats)
library(gridExtra)
library(tidyr)
library(gridExtra)
library(RColorBrewer)
library(cowplot)
library(grid)
#install.packages("colorBlindness")
library(colorBlindness)
```

#### EIAR PCA

```{r}
#| echo: false
eiar_data <- read.csv("eiar_matrix_v2.csv")

eiar_pca_data <- eiar_data
#removing years 2000,2003,2005 - search of literature for these years returned no values
#eiar_pca_data <- subset(eiar_data, year %in% c(2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021))
```

PCA using prcomp()

```{r}
#we don't scale data because it is proportion data -> scaling would be inappropriate
eiar_pca <- prcomp(eiar_pca_data[,-1])
summary(eiar_pca)
print(eiar_pca)
biplot(eiar_pca)

#plot pc1 & pc2
plot(eiar_pca$x[,1], eiar_pca$x[,2])
```

```{r}
#make a scree plot
eiar_pca_var <- eiar_pca$sdev^2
eiar_pca_var_per <- round(eiar_pca_var/sum(eiar_pca_var)*100, 1)

barplot(eiar_pca_var_per, main = "Scree Plot", xlab = "Principal Component", ylab = "Percent Variation")

```

```{r}
# plot the PCA
eiar_scores <- as.data.frame(eiar_pca$x[,1:2])
colnames(eiar_scores) <- c("PC1", "PC2")

eiar_plot <- data.frame(PC1 = eiar_scores$PC1,
                        PC2 = eiar_scores$PC2,
                        Year = eiar_pca_data$year)

ggplot(data= eiar_plot, aes(x = PC1, y = PC2, label = Year)) +
  geom_text() +
  xlab(paste("PC1 - ", eiar_pca_var_per[1], "%", sep = "")) +
  ylab(paste("PC2 - ", eiar_pca_var_per[2], "%", sep = "")) +
  theme_bw() +
  ggtitle("PCA Plot")
```

#### Literature PCA

```{r}
#| echo: false
lit_data <- read.csv("literature_matrix_v3.csv")

lit_pca_data <- lit_data

#removing years 2000,2003,2005 - search of literature for these years returned no values
#lit_pca_data <- subset(lit_data, year %in% c(2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021))
```

PCA using prcomp()

```{r}
lit_pca <- prcomp(lit_pca_data[, -1])
summary(lit_pca)
print(lit_pca)
biplot(lit_pca)

#plot pc1 and pc2
plot(lit_pca$x[,1], lit_pca$x[,2])
```

```{r}
#make a scree plot
lit_pca_var <- lit_pca$sdev^2
lit_pca_var_per <- round(lit_pca_var/sum(lit_pca_var)*100,1)

barplot(lit_pca_var_per, main = "Scree Plot", xlab = "Principal Component", ylab = "Percent Variation" )
```

```{r}
#plot the pca
lit_scores <-as.data.frame(lit_pca$x[,1:2])
colnames(lit_scores) <- c("PC1", "PC2")

lit_plot <- data.frame(PC1 = lit_scores$PC1,
                       PC2 = lit_scores$PC2,
                       Year = lit_pca_data$year)

ggplot(data= lit_plot, aes(x = PC1, y = PC2, label = Year)) +
  geom_text() +
  xlab(paste("PC1 - ", lit_pca_var_per[1], "%", sep = "")) +
  ylab(paste("PC2 - ", lit_pca_var_per[2], "%", sep = "")) +
  theme_bw() +
  ggtitle("PCA Plot")
```

#### Euclidean Distance between EIARs/Lit

```{r}
#Calculating Eucidean distance between the points of the two PCAs
eiar_points <- eiar_pca$x
lit_points <- lit_pca$x

euclidean_distances <- sqrt(rowSums((lit_scores-eiar_scores))^2)

euclidean_distances_years <- data.frame(Distance = euclidean_distances,
                                        Year = eiar_pca_data$year)

#visualise the data:
distance_data <- data.frame(
  Distance = euclidean_distances,
  Year = eiar_pca_data$year)

ggplot(data = distance_data, aes(x = Year, y = Distance, label = Year)) +
  geom_text() +
  xlab("Year") +
  ylab("Euclidean Distance") +
  ggtitle("Euclidean Distance")

ggplot(data = distance_data, aes(x = Year, y = Distance, label = Year)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  xlab("Year") +
  ylab("Euclidean Distance") +
  ggtitle("Euclidean Distance")

```

```{r}
#run a linear regression model to assess whether there is a significant linear trend in the Euclidean distances over time
m1 <- lm(Distance ~ Year, data = distance_data)
summary(m1)
```

```{r}
#plotting the euclidean distances
ggplot(data = distance_data, aes(x = Year, y = Distance)) +
  geom_line(alpha =1, size = 1, color = "#636363") +
  geom_point(size = 2) +
  xlab("Year") +
  ylab("Euclidean Distance") +
  ggtitle("Euclidean Distance") 

ggplot(data = distance_data, aes(x = Year, y = Distance)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = FALSE, color = "#636363") +
  xlab("Year") +
  ylab("Euclidean Distance") +
  ggtitle("Euclidean Distance")

ggplot(data = distance_data, aes(x = Year, y = Distance, label = Year)) +
  geom_text() +
  xlab("Year") +
  ylab("Euclidean Distance") +
  ggtitle("Euclidean Distance") 

ed_plot <- ggplot(data = distance_data, aes(x = Year, y = Distance)) +
  geom_point(size = 2) +
  xlab("Year") +
  ylab("Euclidean Distance") +
  theme_bw() +
  ggtitle("Euclidean Distance") 
```

```{r}
bar_plot <- ggplot(data = distance_data, aes(x = Year, y = Distance)) +
  geom_bar(stat = "identity") +
  xlab("Year") +
  ylab("Euclidean Distance") +
  theme_bw() +
  ggtitle("Euclidean Distance")

smooth_ed_plot <- ggplot(data = distance_data, aes(x = Year, y = Distance)) +
  geom_smooth(color = "#39393A", fill = "#A6A8AD") +
  geom_point(size = 2) +
  labs(title = "(c)", 
       x = "Year",
       y = "Distance between PCA Scores") +
  theme_light() +
   theme(axis.text.x = element_text(size = 14, hjust = 1, color = "black"),
        axis.text.y = element_text(size = 14, color = "black"),
        axis.title = element_text(size = 16, color = "black"),   
        axis.line = element_line(color = "black"),   
        plot.title = element_text(size = 16, face = "bold", color = "black")) +
  theme(legend.position = "bottom",
        legend.title = element_text(size = 14, color = "black"),
        legend.text = element_text(size = 14, color = "black")) 

```

#### Shannon Diversity

*EIARs*

```{r}
#| echo: false
eiar_divdata <- read.csv("eiar_matrix_v2.csv", row.names = 1, header=T)
```

```{r}
# Calculate Shannon Diversity for each EIAR year
eiar_shannon_diversity <- diversity(eiar_divdata, index = "shannon")

print(eiar_shannon_diversity)

plot(eiar_shannon_diversity)
```

*Literature*

```{r}
#| echo: false
lit_divdata <- read.csv("literature_matrix_v3.csv", row.names = 1, header=T)
```

```{r}
#Calculate Shannon Diversity for each Literature year
lit_shannon_diversity <- diversity(lit_divdata, index = "shannon")

print(lit_shannon_diversity)

plot(lit_shannon_diversity)
```

```{r}
#Plot the two Shannon Diversity Indices
years <- 2000:2021
shannon_diversity <- data.frame(EIAR = eiar_shannon_diversity,
                                Literature = lit_shannon_diversity,
                                Years = years)

shannon_diversity_long <- pivot_longer(shannon_diversity, cols = c(EIAR, Literature), names_to = "Index", values_to = "Diversity")


diversity <- ggplot(shannon_diversity_long, aes(x = Years, y = Diversity, fill = Index)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  labs(title = "(d)",
       x = "Year",
       y = "Diversity in taxonomic groups") +
  scale_fill_manual(values = c("EIAR" = "#A6A8AD", "Literature" = "#39393A")) +
  theme_light() +
  theme(axis.text.x = element_text(size = 14, hjust = 1, color = "black"),
        axis.text.y = element_text(size = 14, color = "black"),
        axis.title = element_text(size = 16, color = "black"),   
        axis.line = element_line(color = "black"),   
        plot.title = element_text(size = 16, face = "bold", color = "black")) +
  theme(legend.position = "bottom",
        legend.title = element_text(size = 14, color = "black"),
        legend.text = element_text(size = 14, color = "black"))   
```

```{r}
#Calculate the Average Shannon Diversity for the reviews
eiar_mean_sd <- mean(eiar_shannon_diversity)
eiar_mean_sd

lit_mean_sd <- mean(lit_shannon_diversity)
lit_mean_sd 

#Use a t-test to see if there is a significant difference between the two datasets
diversity_t_test <- t.test(eiar_shannon_diversity, lit_shannon_diversity)

print(diversity_t_test)
```

#### Pielou Evenness

```{r}
#S = 6 -> 6 taxonomic groups
S <- 6
```

*EIARs*

```{r}
eiar_pielou <- eiar_shannon_diversity/log(S)
print(eiar_pielou)
```

*Literature*

```{r}
lit_pielou <- lit_shannon_diversity/log(S)
print(lit_pielou)
```

```{r}
#plot to visualise:
pielou_eveness <- data.frame(EIAR = eiar_pielou,
                             Literature = lit_pielou,
                             Years = years)
pielou_eveness_long <- pivot_longer(pielou_eveness, cols = c(EIAR, Literature), names_to = "Index", values_to = "Eveness")

evenness <- ggplot(pielou_eveness_long, aes(x = Years, y = Eveness, fill = Index)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  labs(title = "C.",
       x = "Year",
       y = "Pielou Evenness") +
  scale_fill_manual(values = c("EIAR" = "#A6A8AD", "Literature" = "#39393A")) +
  theme_bw()
```

```{r}
#Calculate the average Pielou evenness for the Review datasets
eiar_mean_pe <- mean(eiar_pielou)
eiar_mean_pe

lit_mean_pe <- mean(lit_pielou)
lit_mean_pe

#Use a t-test to see if there is a significant difference between the two datasets
eveness_t_test <- t.test(eiar_pielou, lit_pielou)
print(eveness_t_test)
```

#### Proportion plots

```{r}
#| echo: false
#| 
dark2 <- brewer.pal(8, "Dark2")
paired <- brewer.pal(12, "Paired")
```

*EIARs*

```{r}
eiar_long <- pivot_longer(eiar_data, cols = c(bats, birds, herpetofauna, invertebrates, mammals, vegetation), names_to = "taxa", values_to = "proportion")

eiar_prop <- ggplot(eiar_long, aes(x = year, y = proportion, fill = taxa)) +
  geom_bar(stat = "identity") +
  labs(x = "Year", y = "Proportion of taxonomic groups", fill = "Taxa") + 
  scale_fill_manual(values = paired) +
  theme_light() +
  theme(legend.position = "bottom") +
  theme(axis.text.x = element_text(hjust = 1, color = "black"),
        axis.text.y = element_text(size = 14, color = "black"),
        axis.title = element_text(size = 16, color = "black"),   
        axis.line = element_line(color = "black"),   
        plot.title = element_text(size = 16, face = "bold", color = "black")) +
  ggtitle("(b) EIAR")
```

*Literature*

```{r}
lit_long <- pivot_longer(lit_data, cols = -year, names_to = "taxa", values_to = "proportion")

lit_prop <- ggplot(lit_long, aes(x = year, y = proportion, fill = taxa)) +
  geom_bar(stat = "identity") +
  labs(x = "Year", y = "Proportion of taxonomic groups", fill = "Taxa") + 
  scale_fill_manual(values = paired) +
  theme_light() +
  theme(legend.position = "bottom",
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 14)) +
  theme(axis.text.x = element_text(hjust = 1, color = "black"),
        axis.text.y = element_text(size = 14, color = "black"),
        axis.title = element_text(size = 16, color = "black"),   
        axis.line = element_line(color = "black"),   
        plot.title = element_text(size = 16, face = "bold", color = "black")) +
  ggtitle("(a) Literature")
```

```{r}
prop_plots <- grid.arrange(lit_prop, eiar_prop, ncol =2)
cvdPlot(prop_plots)
```

##### Combined Plots

```{r}
prop_smoothed_diversity <-  grid.arrange(prop_plots, smooth_ed_plot, diversity, ncol =1)
ggsave("prop_smoothed_diversity.png", plot = prop_smoothed_diversity, dpi = 1000, height = 12, width = 14)

```

```{r}
new_layout <- rbind(c(1), c(1), c(2), c(2), c(3))

# Arrange the plots with the new layout
arrangeGrob(prop_plots, smooth_ed_plot, diversity, ncol = 1, layout_matrix = new_layout)

```
